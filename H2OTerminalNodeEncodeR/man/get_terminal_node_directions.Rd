% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_terminal_node_directions.R
\name{get_terminal_node_directions}
\alias{get_terminal_node_directions}
\title{Get split conditions for terminal nodes}
\usage{
get_terminal_node_directions(df, node, current_str = NULL,
  unique_expr = FALSE)
}
\arguments{
\item{df}{\code{data.frame} output from get_split_expressions function.}

\item{node}{name of top node in tree (to start descending from).}

\item{current_str}{split condition to be passed through subsequent function
calls in order to keep all conditions that lead to terminal nodes. Default is
NULL.}

\item{unique_expr}{should unique split expressions for terminal nodes be
returned? Default is \code{FALSE}.}
}
\value{
Nested \code{list} containing appeneded split conditions for terminal
nodes.
}
\description{
This function uses recursion to append all split directions that lead to
terminal nodes.
}
\examples{
library(h2o)

h2o.init()

prostate.hex = h2o.uploadFile(path = system.file("extdata",
                                                 "prostate.csv",
                                                 package = "h2o"),
                              destination_frame = "prostate.hex")

prostate.hex$RACE <- as.factor(prostate.hex$RACE)

prostate.hex$DPROS <- as.factor(prostate.hex$DPROS)

prostate.gbm = h2o.gbm(x = c("AGE", "RACE", "DPROS", "DCAPS", "PSA", "VOL", "GLEASON"),
                       y = "CAPSULE",
                       training_frame = prostate.hex,
                       ntrees = 5,
                       max_depth = 5,
                       learn_rate = 0.1)

h2o_trees <- H2OTreeConvertR::h2o_tree_convertR(prostate.gbm)

tree_1_split_expr <- get_split_expressions(h2o_trees[[1]])

tree_1_terminal_nodes_list <- get_terminal_node_directions(df = tree_1_split_expr,
                                                           node = tree_1_split_expr[1, 'node'],
                                                           current_str = NULL)

}
