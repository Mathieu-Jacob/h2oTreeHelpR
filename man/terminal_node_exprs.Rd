% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/terminal_node_exprs.R
\name{terminal_node_exprs}
\alias{terminal_node_exprs}
\title{Get split conditions for terminal nodes}
\usage{
terminal_node_exprs(split_exprs, terminal_node_paths = TRUE)
}
\arguments{
\item{split_exprs}{\code{data.frame} output from \code{get_split_expressions}
function.}

\item{terminal_node_paths}{should decision paths (A > 10 & b < 3 etc) be
returned, or directions (LRLL etc)? Default is \code{TRUE}.}
}
\value{
\code{data.frame} containing complete split conditions for terminal
nodes.
}
\description{
This is a wrapper for the \code{get_terminal_node_paths} or
\code{get_terminal_node_directions} functions to do input checking and return
results in a better form (\code{data.frame})
}
\examples{
library(h2o)

h2o.init()

prostate.hex = h2o.uploadFile(path = system.file("extdata",
                                                 "prostate.csv",
                                                 package = "h2o"),
                              destination_frame = "prostate.hex")

prostate.hex$RACE <- as.factor(prostate.hex$RACE)

prostate.hex$DPROS <- as.factor(prostate.hex$DPROS)

prostate.gbm = h2o.gbm(x = c("AGE", "RACE", "DPROS", "DCAPS", "PSA", "VOL", "GLEASON"),
                       y = "CAPSULE",
                       training_frame = prostate.hex,
                       ntrees = 5,
                       max_depth = 5,
                       learn_rate = 0.1)

h2o_trees <- H2OTreeConvertR::h2o_tree_convertR(prostate.gbm)

tree_1_split_expr <- get_split_expressions(h2o_trees[[1]])

# return paths
tree_1_terminal_nodes_df <- terminal_node_exprs(df = tree_1_split_expr)

# return directions
tree_1_terminal_nodes_df2 <- terminal_node_exprs(df = tree_1_split_expr,
                                                 terminal_node_paths = FALSE)

}
