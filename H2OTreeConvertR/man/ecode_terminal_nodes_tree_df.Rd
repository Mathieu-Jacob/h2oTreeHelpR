% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/encode_terminal_nodes.R
\name{ecode_terminal_nodes_tree_df}
\alias{ecode_terminal_nodes_tree_df}
\title{Encode input data as terminal nodes for single tree.}
\usage{
ecode_terminal_nodes_tree_df(data, terminal_node_split_rules, h2o_tree_in_R,
  tree_name = "tree_")
}
\arguments{
\item{data}{input data to encode as terminal nodes from trees. Currently only \code{data.frame}
inputs are supported.}

\item{terminal_node_split_rules}{splitting rules for terminal nodes in a single tree,
the output from \code{extract_split_rules} function.}

\item{h2o_tree_in_R}{single tree output from \code{h2o_tree_model_to_R} function.}

\item{tree_name}{the prefix to be given to column names. Columns will be named prefix followed by
the name of the terminal node. Default = 'tree_'.}
}
\value{
terminal node encoding for input data. Currently only \code{data.frame} is output.
}
\description{
This function returns the results as a data.frame.
}
\examples{
library(h2o)

h2o.init()

prostate.hex = h2o.uploadFile(path = system.file("extdata",
                                                 "prostate.csv",
                                                 package = "h2o"),
                              destination_frame = "prostate.hex")

prostate.hex$RACE <- as.factor(prostate.hex$RACE)

prostate.hex$DPROS <- as.factor(prostate.hex$DPROS)

prostate.gbm = h2o.gbm(x = c("AGE", "RACE", "DPROS", "DCAPS", "PSA", "VOL", "GLEASON"),
                       y = "CAPSULE",
                       training_frame = prostate.hex,
                       ntrees = 5,
                       max_depth = 5,
                       learn_rate = 0.1)

h2o_trees <- h2o_tree_model_to_R(h2o_model = prostate.gbm,
                                 mojo_output_path = '/Users/UserName/Desktop',
                                 gv_output_path = '/Users/UserName/Desktop',
                                 model_ini_overwrite = TRUE,
                                 h2o_jar_file = 'h2o.jar')

h2o_trees_terminal_node_rules <- extract_split_rules(h2o_trees)

terminal_node_encoding_tree1 <- encode_terminal_nodes(data = prostate_df,
                                                      terminal_node_split_rules = h2o_trees_terminal_node_rules[[1]],
                                                      h2o_trees_in_R = h2o_trees[[1]])

}
